
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS BOOK;
DROP TABLE IF EXISTS STOCK;
DROP TABLE IF EXISTS ORDERS;
DROP TABLE IF EXISTS PRICE;
DROP TABLE IF EXISTS ORDER_DETAIL;

CREATE TABLE USERS (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  USERNAME VARCHAR(50) NOT NULL UNIQUE,
  PASSWORD VARCHAR(50) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE CUSTOMER (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  EMAIL VARCHAR(100) NOT NULL UNIQUE,
  NAME VARCHAR(50) NOT NULL,
  SURNAME VARCHAR(50) NOT NULL,
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE BOOK (
  ID INTEGER NOT NULL UNIQUE AUTO_INCREMENT,
  NAME VARCHAR(255) NOT NULL,
  AUTHOR VARCHAR(100),
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE STOCK (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  BOOK INTEGER NOT NULL,
  QUANTITY INTEGER NOT NULL DEFAULT 0,
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (BOOK) REFERENCES BOOK(ID) ON DELETE CASCADE
);

CREATE TABLE PRICE (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  BOOK INTEGER NOT NULL,
  AMOUNT DOUBLE NOT NULL,
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (BOOK) REFERENCES BOOK(ID) ON DELETE CASCADE
);

CREATE TABLE ORDERS (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  CUSTOMER INTEGER NOT NULL,
  STATUS VARCHAR(50) NOT NULL,
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMER(ID)
);

CREATE TABLE ORDERS_DETAIL (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  ORDERS INTEGER NOT NULL,
  BOOK INTEGER NOT NULL,
  QUANTITY INTEGER NOT NULL DEFAULT 1,
  TOTAL DOUBLE NOT NULL,
  CREATED DATETIME NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (BOOK) REFERENCES BOOK(ID),
  FOREIGN KEY (ORDERS) REFERENCES ORDERS(ID) ON DELETE CASCADE
);





